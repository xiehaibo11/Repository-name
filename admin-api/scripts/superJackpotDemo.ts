import { Pool } from 'pg';
import { EnhancedSuperJackpotService } from '../src/services/enhancedSuperJackpotService';

/**
 * Ë∂ÖÁ∫ßÂ§ßÂ•ñÁ≥ªÁªüÊºîÁ§∫ËÑöÊú¨
 * Â±ïÁ§∫Á≥ªÁªüÁöÑÊ†∏ÂøÉÂäüËÉΩÂíåÂ∑•‰ΩúÊµÅÁ®ã
 */

// Êï∞ÊçÆÂ∫ìËøûÊé•ÈÖçÁΩÆ
const pool = new Pool({
  user: process.env.DB_USER || 'postgres',
  host: process.env.DB_HOST || 'localhost',
  database: process.env.DB_NAME || 'lottery_admin',
  password: process.env.DB_PASSWORD || 'password',
  port: parseInt(process.env.DB_PORT || '5432'),
});

const superJackpotService = new EnhancedSuperJackpotService(pool);

async function demonstrateSuperJackpot() {
  console.log('üé∞ Ë∂ÖÁ∫ßÂ§ßÂ•ñÁ≥ªÁªüÊºîÁ§∫');
  console.log('='.repeat(50));
  
  try {
    // 1. ÊòæÁ§∫Á≥ªÁªüÁä∂ÊÄÅ
    console.log('\nüìä 1. Á≥ªÁªüÁä∂ÊÄÅ');
    console.log('-'.repeat(30));
    
    const stats = await superJackpotService.getJackpotStats();
    console.log(`ÂΩìÂâçÂ•ñÈáëÊ±†: ${stats.currentJackpot.toLocaleString()}`);
    console.log(`ÂéÜÂè≤‰∏≠Â•ñ‰∫∫Êï∞: ${stats.totalWinners}`);
    console.log(`Á¥ØËÆ°ÊîØ‰ªòÈáëÈ¢ù: ${stats.totalPaid.toLocaleString()}`);
    console.log(`ÁõÆÊ†áÊ¶ÇÁéá: ${stats.targetProbability} (Á∫¶${Math.round(1/stats.targetProbability).toLocaleString()}ÂàÜ‰πã‰∏Ä)`);
    console.log(`È¢Ñ‰º∞‰∏≠Â•ñÂ§©Êï∞: ${stats.estimatedDaysToWin}Â§©`);
    
    // 2. Ê®°ÊãüÊäïÊ≥®Êï∞ÊçÆ
    console.log('\nüé≤ 2. Ê®°ÊãüÊäïÊ≥®Âú∫ÊôØ');
    console.log('-'.repeat(30));
    
    const mockBets = [
      {
        id: 1,
        user_id: 1001,
        amount: 100,
        bet_type: 'number_play',
        bet_content: JSON.stringify({ position: 0, number: 5 }),
        status: 'active'
      },
      {
        id: 2,
        user_id: 1002,
        amount: 50,
        bet_type: 'double_side',
        bet_content: JSON.stringify({ position: 1, type: 'big' }),
        status: 'active'
      },
      {
        id: 3,
        user_id: 1003,
        amount: 200,
        bet_type: 'positioning',
        bet_content: JSON.stringify({ positions: [0, 1], numbers: [5, 6] }),
        status: 'active'
      }
    ];
    
    console.log(`Ê®°ÊãüÊäïÊ≥®Êï∞Èáè: ${mockBets.length}`);
    console.log(`ÊÄªÊäïÊ≥®ÈáëÈ¢ù: ${mockBets.reduce((sum, bet) => sum + bet.amount, 0)}`);
    
    // 3. Ê®°ÊãüÂºÄÂ•ñÂè∑Á†Å
    const mockDrawNumbers = [5, 6, 3, 8, 2];
    console.log(`Ê®°ÊãüÂºÄÂ•ñÂè∑Á†Å: ${mockDrawNumbers.join(',')}`);
    
    // 4. Ê∑ªÂä†Â•ñÈáëÊ±†Ë¥°ÁåÆ
    console.log('\nüí∞ 3. Â•ñÈáëÊ±†Ë¥°ÁåÆ');
    console.log('-'.repeat(30));
    
    for (const bet of mockBets) {
      await superJackpotService.addJackpotContribution(
        bet.user_id,
        20241201001, // Ê®°ÊãüÊúüÂè∑ID
        bet.id,
        bet.amount
      );
      console.log(`Áî®Êà∑${bet.user_id}ÊäïÊ≥®${bet.amount}ÂÖÉÔºåË¥°ÁåÆ${(bet.amount * 0.001).toFixed(2)}ÂÖÉÂà∞Â•ñÈáëÊ±†`);
    }
    
    // 5. Ê®°ÊãüË∂ÖÁ∫ßÂ§ßÂ•ñÊ£ÄÊü•
    console.log('\nüéØ 4. Ë∂ÖÁ∫ßÂ§ßÂ•ñÊ£ÄÊü•');
    console.log('-'.repeat(30));
    
    console.log('Ê≠£Âú®Ê£ÄÊü•Ë∂ÖÁ∫ßÂ§ßÂ•ñËß¶Âèë...');
    
    // Ê≥®ÊÑèÔºöËøôÈáå‰ΩøÁî®Ê®°ÊãüÊï∞ÊçÆÔºåÂÆûÈôÖÊ¶ÇÁéáÊûÅ‰ΩéÔºåÂá†‰πé‰∏ç‰ºöËß¶Âèë
    const winners = await superJackpotService.processSuperJackpot(
      20241201001, // ÊúüÂè∑ID
      '20241201001', // ÊúüÂè∑
      mockDrawNumbers,
      mockBets
    );
    
    if (winners.length > 0) {
      console.log('üéâ ÊÅ≠ÂñúÔºÅËß¶ÂèëË∂ÖÁ∫ßÂ§ßÂ•ñÔºÅ');
      for (const winner of winners) {
        console.log(`‰∏≠Â•ñÁî®Êà∑: ${winner.user_id}`);
        console.log(`‰∏≠Â•ñÈáëÈ¢ù: ${winner.amount.toLocaleString()}`);
        console.log(`ÊäïÊ≥®Á±ªÂûã: ${winner.bet_type}`);
        console.log(`‰ΩøÁî®Ê¶ÇÁéá: ${winner.probability_used}`);
      }
    } else {
      console.log('Êú¨ÊúüÊú™Ëß¶ÂèëË∂ÖÁ∫ßÂ§ßÂ•ñÔºàËøôÊòØÊ≠£Â∏∏ÊÉÖÂÜµÔºåÊ¶ÇÁéáÊûÅ‰ΩéÔºâ');
    }
    
    // 6. ÊòæÁ§∫ÊúÄÊñ∞ÁªüËÆ°
    console.log('\nüìà 5. Êõ¥Êñ∞ÂêéÁªüËÆ°');
    console.log('-'.repeat(30));
    
    const updatedStats = await superJackpotService.getJackpotStats();
    console.log(`ÂΩìÂâçÂ•ñÈáëÊ±†: ${updatedStats.currentJackpot.toLocaleString()}`);
    console.log(`Á¥ØËÆ°Ë¥°ÁåÆ: ${updatedStats.totalContributions.toLocaleString()}`);
    
    // 7. Ê¶ÇÁéáËÆ°ÁÆóÊºîÁ§∫
    console.log('\nüßÆ 6. Ê¶ÇÁéáËÆ°ÁÆóÊºîÁ§∫');
    console.log('-'.repeat(30));
    
    const baseProbability = 1 / 59600000;
    console.log(`Âü∫Á°ÄÊ¶ÇÁéá: ${baseProbability} (${(baseProbability * 100).toExponential(2)}%)`);
    console.log(`ÊØèÂ§©1440ÊúüÔºåÁêÜËÆ∫‰∏äÈúÄË¶Å ${Math.round(1 / baseProbability / 1440)} Â§©ÊâçÂèØËÉΩ‰∏≠Â•ñ‰∏ÄÊ¨°`);
    console.log(`ËøôÁõ∏ÂΩì‰∫éÁ∫¶ ${Math.round(1 / baseProbability / 1440 / 365)} Âπ¥`);
    
    // 8. Á≥ªÁªüÈÖçÁΩÆÂ±ïÁ§∫
    console.log('\n‚öôÔ∏è 7. Á≥ªÁªüÈÖçÁΩÆ');
    console.log('-'.repeat(30));
    
    const configResult = await pool.query(`
      SELECT * FROM super_jackpot_config WHERE config_name = 'default'
    `);
    
    if (configResult.rows.length > 0) {
      const config = configResult.rows[0];
      console.log(`Âü∫Á°ÄÊ¶ÇÁéá: ${config.base_probability}`);
      console.log(`ÊúÄÂ§ßÊ¶ÇÁéáÈôêÂà∂: ${config.max_probability}`);
      console.log(`ÊúÄÂ∞èÊäïÊ≥®ÈáëÈ¢ù: ${config.min_bet_amount}`);
      console.log(`ÊØèÊúüÊúÄÂ§ß‰∏≠Â•ñ‰∫∫Êï∞: ${config.max_winners_per_issue}`);
      console.log(`Á≥ªÁªüÁä∂ÊÄÅ: ${config.is_active ? 'ÊøÄÊ¥ª' : 'ÂÅúÁî®'}`);
    }
    
    // 9. Êó•ÂøóÊü•ËØ¢ÊºîÁ§∫
    console.log('\nüìã 8. ÊúÄËøëÊó•Âøó');
    console.log('-'.repeat(30));
    
    const logsResult = await pool.query(`
      SELECT event_type, is_triggered, total_bets, final_probability, created_at
      FROM super_jackpot_logs
      ORDER BY created_at DESC
      LIMIT 5
    `);
    
    if (logsResult.rows.length > 0) {
      console.log('ÊúÄËøë5Êù°Êó•Âøó:');
      for (const log of logsResult.rows) {
        console.log(`${log.created_at.toISOString()} - ${log.event_type} - Ëß¶Âèë:${log.is_triggered ? 'ÊòØ' : 'Âê¶'} - ÊäïÊ≥®Êï∞:${log.total_bets} - Ê¶ÇÁéá:${log.final_probability || 'N/A'}`);
      }
    } else {
      console.log('ÊöÇÊó†Êó•ÂøóËÆ∞ÂΩï');
    }
    
    console.log('\n‚úÖ ÊºîÁ§∫ÂÆåÊàêÔºÅ');
    console.log('\nüìù ËØ¥Êòé:');
    console.log('‚Ä¢ Ë∂ÖÁ∫ßÂ§ßÂ•ñÊ¶ÇÁéáÊûÅ‰ΩéÔºåÊ≠£Â∏∏ÊÉÖÂÜµ‰∏ã‰∏ç‰ºöËß¶Âèë');
    console.log('‚Ä¢ ÊØèÁ¨îÊäïÊ≥®ÈÉΩ‰ºöÂêëÂ•ñÈáëÊ±†Ë¥°ÁåÆ0.1%');
    console.log('‚Ä¢ Á≥ªÁªü‰ºöËÆ∞ÂΩïÊâÄÊúâÊ£ÄÊü•ËøáÁ®ãÂíåÁªìÊûú');
    console.log('‚Ä¢ ÁÆ°ÁêÜÂëòÂèØ‰ª•ÈÄöËøáAPIÊé•Âè£ÁõëÊéßÁ≥ªÁªüÁä∂ÊÄÅ');
    
  } catch (error) {
    console.error('‚ùå ÊºîÁ§∫ËøáÁ®ã‰∏≠ÂèëÁîüÈîôËØØ:', error);
  }
}

// ÊµãËØïÊ¶ÇÁéáËÆ°ÁÆóÁöÑËæÖÂä©ÂáΩÊï∞
async function testProbabilityCalculation() {
  console.log('\nüß™ Ê¶ÇÁéáËÆ°ÁÆóÊµãËØï');
  console.log('='.repeat(50));
  
  const testCases = [
    { bets: 100, description: 'Â∞ëÈáèÊäïÊ≥®' },
    { bets: 1000, description: '‰∏≠Á≠âÊäïÊ≥®' },
    { bets: 10000, description: 'Â§ßÈáèÊäïÊ≥®' },
    { bets: 100000, description: 'ÊûÅÂ§ßÈáèÊäïÊ≥®' }
  ];
  
  for (const testCase of testCases) {
    // Ê®°Êãü‰∏çÂêåÊäïÊ≥®ÈáèÁöÑÊ¶ÇÁéáËÆ°ÁÆó
    const baseProbability = 1 / 59600000;
    const betVolumeMultiplier = Math.min(1 + (testCase.bets / 10000), 2.0);
    const finalProbability = baseProbability * betVolumeMultiplier;
    
    console.log(`${testCase.description} (${testCase.bets}Á¨î):`);
    console.log(`  Âü∫Á°ÄÊ¶ÇÁéá: ${baseProbability.toExponential(2)}`);
    console.log(`  Ë∞ÉÊï¥ÂÄçÊï∞: ${betVolumeMultiplier.toFixed(3)}`);
    console.log(`  ÊúÄÁªàÊ¶ÇÁéá: ${finalProbability.toExponential(2)}`);
    console.log(`  ÁêÜËÆ∫Ëß¶ÂèëÈó¥Èöî: ${Math.round(1 / finalProbability).toLocaleString()}Ê¨°`);
    console.log('');
  }
}

// Â¶ÇÊûúÁõ¥Êé•ËøêË°åÊ≠§ËÑöÊú¨
if (require.main === module) {
  demonstrateSuperJackpot()
    .then(() => testProbabilityCalculation())
    .then(() => {
      console.log('üéØ ÊºîÁ§∫ÂíåÊµãËØïÂÆåÊàê');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå ÊºîÁ§∫Â§±Ë¥•:', error);
      process.exit(1);
    });
}

export { demonstrateSuperJackpot, testProbabilityCalculation };
